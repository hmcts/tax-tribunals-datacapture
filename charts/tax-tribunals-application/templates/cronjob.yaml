{{- $globals := .Values.global | default dict -}}
{{- $baseValues := dict "Values" .Values.base -}}
{{- $noValues := omit . "Values" -}}
{{- $base := merge $baseValues  $noValues }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "hmcts.releasename.v2" . }}-cronjob
  labels:
    app.kubernetes.io/name: {{ template "hmcts.releasename.v2" $base }}-cronjob
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ template "hmcts.releasename.v2" $base }}-cronjob
    aadpodidbinding: {{ .Values.base.aadIdentityName }}
{{- include "hmcts.annotations.v2" . | indent 2 }}
spec:
  schedule: "0 3 * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  startingDeadlineSeconds: 300
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 216000 # 60 hours
      backoffLimit: 0
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ template "hmcts.releasename.v2" $base }}-cronjob
            helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
            app.kubernetes.io/managed-by: {{ .Release.Service }}
            app.kubernetes.io/instance: {{ template "hmcts.releasename.v2" $base }}-cronjob
            aadpodidbinding: {{ .Values.base.aadIdentityName }}
        spec:
          restartPolicy: Never
          {{- include "hmcts.interpodantiaffinity.v2" $base | indent 10 }}
          {{- ( include "hmcts.dnsConfig.v2" $base ) | indent 10 }}
          {{- if $globals.enableKeyVaults }}
          volumes:
            - name: vault-c100
              csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: {{ .Release.Name }}-base-c100
          {{- end }}
          containers:
            - name: cronjob-daily-tasks
              image: {{ .Values.base.image }}
              imagePullPolicy: Always
              command: ['bin/rails', 'daily_tasks']
              {{- ( include "hmcts.secretMounts.v2" $base ) | indent 14 }}
              env:
              {{ if .Values.redis.url }}
                - name: DATABASE_URL
                  value: postgres://{{ .Values.base.postgresql.auth.username}}:{{ .Values.base.postgresql.auth.password}}@{{ .Release.Name }}-postgresql/{{ .Values.base.postgresql.auth.database }}
                - name: REDIS_URL
                  value: {{ .Values.redis.url }}
                - name: DATABASE_SSLMODE
                  value: 'allow'
              {{ end }}