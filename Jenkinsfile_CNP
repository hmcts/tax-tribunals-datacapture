@Library("Infrastructure")

def type = "ruby"
def product = "tax-tribunals"
def component = "application"

def rubyBuilder = new uk.gov.hmcts.contino.RubyBuilder(this)
def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

withPipeline(type, product, component) {
    env.RAILS_ENV = 'test'
    env.RACK_ENV = 'test'
    // random free port should probably be used instead
    env.DATABASE_URL = 'postgres://postgres:mysecretpassword@localhost:5421/tax-tribunals-test'
    env.EXTERNAL_URL = 'mocked_in_tests'
    env.GOVUK_NOTIFY_API_KEY = 'mocked_in_tests'
    env.GLIMR_API_URL = 'replace_this_at_build_time'
    env.GLIMR_DIRECT_API_URL = 'replace_this_at_build_time'
    env.GLIMR_DIRECT_ENABLED = 'replace_this_at_build_time'
    env.EXTERNAL_URL = 'replace_this_at_build_time'
    env.PAYMENT_ENDPOINT = 'replace_this_at_build_time'
    env.TAX_TRIBUNALS_DOWNLOADER_URL = 'replace_this_at_build_time'
    env.SENTRY_DSN = 'replace_this_at_build_time'
    env.GOVUK_NOTIFY_API_KEY = 'replace_this_at_build_time'
    env.GTM_TRACKING_ID = 'replace_this_at_build_time'
    env.TAX_TRIBUNAL_EMAIL = 'replace_this_at_build_time'
    env.ZENDESK_USERNAME = 'replace_this_at_build_time'
    env.ZENDESK_TOKEN = 'replace_this_at_build_time'
    env.UPLOAD_PROBLEMS_REPORT_AUTH_USER = 'replace_this_at_build_time'
    env.UPLOAD_PROBLEMS_REPORT_AUTH_DIGEST = 'replace_this_at_build_time'
    env.ADMIN_USERNAME = 'replace_this_at_build_time'
    env.ADMIN_PASSWORD = 'replace_this_at_build_time'
    env.NOTIFY_CASE_CONFIRMATION_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_FTT_CASE_NOTIFICATION_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_NEW_CASE_SAVED_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_CHANGE_PASSWORD_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_RESET_PASSWORD_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_CASE_FIRST_REMINDER_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_CASE_LAST_REMINDER_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_REPORT_PROBLEM_TEMPLATE_ID = 'replace_this_at_build_time'
    env.REPORT_PROBLEM_EMAIL_ADDRESS = 'replace_this_at_build_time'
    env.NOTIFY_SEND_APPLICATION_DETAIL_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_SEND_APPLICATION_DETAIL_TEXT_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_CASE_CONFIRMATION_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_FTT_CASE_NOTIFICATION_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_NEW_CASE_SAVED_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_CHANGE_PASSWORD_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_RESET_PASSWORD_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_CASE_FIRST_REMINDER_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_CASE_LAST_REMINDER_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_REPORT_PROBLEM_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_SEND_APPLICATION_DETAIL_CY_TEMPLATE_ID = 'replace_this_at_build_time'
    env.NOTIFY_SEND_APPLICATION_DETAIL_CY_TEXT_TEMPLATE_ID = 'replace_this_at_build_time'
    env.ADDRESS_LOOKUP_ENDPOINT = 'https://api.os.uk/'
    env.ADDRESS_LOOKUP_API_KEY = 'replace_this_at_build_time'
    env.ADDRESS_LOOKUP_API_SECRET = 'replace_this_at_build_time'

    before('build') {
        yarnBuilder.runYarn("--mutex network install --frozen-lockfile")
        sh script:"""#!/bin/bash -l
            set +x
            source /usr/local/rvm/scripts/rvm
            rvm install ruby-3.3.4
        """, label: 'Ruby version install'
    }

    before('test') {
        sh script: """
            docker pull hmctspublic.azurecr.io/imported/postgres:latest
            docker stop tt-test-postgres && docker rm tt-test-postgres || echo 'Ignoring failure in stopping old postgres'
            docker run --rm --name tt-test-postgres --publish 5421:5432 -e POSTGRES_PASSWORD=mysecretpassword -d hmctspublic.azurecr.io/imported/postgres:latest
        """, label: 'Start test postgres'

        rubyBuilder.bundle("exec rake db:create exec db:schema:load")
        rubyBuilder.bundle("exec install")
    }

    afterAlways('test') {
        sh script: "docker stop tt-test-postgres && docker rm tt-test-postgres || echo 'Ignoring failure in stopping postgres'",
            label: "docker stop tt-test-postgres"
    }
}
